package com.example.companycore.controller.attendance;

import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Region;
import javafx.fxml.Initializable;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.Node;
import javafx.scene.control.DatePicker;
import java.io.File;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.List;
import java.util.ArrayList;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class LeaveApplicationController implements Initializable {
    
    @FXML
    private ComboBox<String> leaveTypeComboBox;
    
    @FXML
    private TextField employeeIdField;
    
    @FXML
    private DatePicker startDatePicker;
    
    @FXML
    private DatePicker endDatePicker;
    
    @FXML
    private TextArea reasonTextArea;
    
    @FXML
    private VBox fileListContainer;
    
    @FXML
    private Button addFileButton;
    
    @FXML
    private Button requestButton;
    
    @FXML
    private Button cancelButton;
    
    private List<File> attachedFiles = new ArrayList<>();
    
    @Override
    public void initialize(URL location, ResourceBundle resources) {
        setupEventHandlers();
        setupInitialData();
    }
    
    private void setupEventHandlers() {
        // ÌååÏùº Ï∂îÍ∞Ä Î≤ÑÌäº
        addFileButton.setOnAction(e -> handleAddFile());
        
        // ÏöîÏ≤≠ÌïòÍ∏∞ Î≤ÑÌäº
        requestButton.setOnAction(e -> handleSubmitRequest());
        
        // Ï∑®ÏÜå Î≤ÑÌäº
        cancelButton.setOnAction(e -> handleCancel());
        
        // DatePickerÎäî Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Îã¨Î†• Í∏∞Îä•Ïù¥ ÎÇ¥Ïû•ÎêòÏñ¥ ÏûàÏùå
    }
    
    private void setupInitialData() {
        // ÏÇ¨Î≤à ÌïÑÎìúÎäî ÏùΩÍ∏∞ Ï†ÑÏö©ÏúºÎ°ú ÏÑ§Ï†ï
        employeeIdField.setEditable(false);
        employeeIdField.setText("2534001");
        
        // Ìú¥Í∞Ä Ï¢ÖÎ•ò ÏΩ§Î≥¥Î∞ïÏä§ Ï¥àÍ∏∞Ìôî
        leaveTypeComboBox.getItems().addAll("Ïó∞Ï∞®", "Î≥ëÍ∞Ä", "Í≥µÍ∞Ä", "Î∞òÏ∞®", "ÌäπÎ≥ÑÌú¥Í∞Ä");
        leaveTypeComboBox.setValue("Ïó∞Ï∞®");
        
        // Í∏∞Î≥∏ ÎÇ†Ïßú ÏÑ§Ï†ï
        startDatePicker.setValue(LocalDate.of(2025, 8, 1));
        endDatePicker.setValue(LocalDate.of(2025, 8, 3));
    }
    
    private void handleAddFile() {
        FileChooser fileChooser = new FileChooser();
        fileChooser.setTitle("ÌååÏùº ÏÑ†ÌÉù");
        fileChooser.getExtensionFilters().addAll(
            new FileChooser.ExtensionFilter("Î™®Îì† ÌååÏùº", "*.*"),
            new FileChooser.ExtensionFilter("Ïù¥ÎØ∏ÏßÄ ÌååÏùº", "*.png", "*.jpg", "*.jpeg", "*.gif", "*.webp"),
            new FileChooser.ExtensionFilter("Î¨∏ÏÑú ÌååÏùº", "*.pdf", "*.doc", "*.docx", "*.txt")
        );
        
        File selectedFile = fileChooser.showOpenDialog(getStage());
        if (selectedFile != null) {
            attachedFiles.add(selectedFile);
            addFileToList(selectedFile);
        }
    }
    
         
    
    private void addFileToList(File file) {
        HBox fileItem = new HBox(10);
        fileItem.setAlignment(javafx.geometry.Pos.CENTER_LEFT);
        fileItem.setStyle("-fx-padding: 8 0;");
        
        // ÌååÏùº ÏïÑÏù¥ÏΩò
        Label fileIcon = new Label("üìÑ");
        fileIcon.setStyle("-fx-font-size: 16px;");
        
        // ÌååÏùºÎ™Ö
        Label fileName = new Label(file.getName());
        fileName.setStyle("-fx-text-fill: #495057;");
        
        // Ïä§ÌéòÏù¥ÏÑú
        Region spacer = new Region();
        HBox.setHgrow(spacer, javafx.scene.layout.Priority.ALWAYS);
        
        // Ïï°ÏÖò Î≤ÑÌäºÎì§
        Button linkButton = new Button("üîó");
        linkButton.setStyle("-fx-background-color: transparent; -fx-text-fill: #007bff; -fx-cursor: hand; -fx-padding: 5;");
        linkButton.setOnAction(e -> handleFileLink(file));
        
        Button previewButton = new Button("üìã");
        previewButton.setStyle("-fx-background-color: transparent; -fx-text-fill: #28a745; -fx-cursor: hand; -fx-padding: 5;");
        previewButton.setOnAction(e -> handleFilePreview(file));
        
        Button deleteButton = new Button("‚úï");
        deleteButton.setStyle("-fx-background-color: transparent; -fx-text-fill: #dc3545; -fx-cursor: hand; -fx-padding: 5;");
        deleteButton.setOnAction(e -> handleFileDelete(file, fileItem));
        
        fileItem.getChildren().addAll(fileIcon, fileName, spacer, linkButton, previewButton, deleteButton);
        fileListContainer.getChildren().add(fileItem);
    }
    
    private void handleFileLink(File file) {
        // ÌååÏùº ÎßÅÌÅ¨ Î≥µÏÇ¨ Í∏∞Îä•
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("ÌååÏùº ÎßÅÌÅ¨");
        alert.setHeaderText(null);
        alert.setContentText("ÌååÏùº ÎßÅÌÅ¨Í∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§.");
        alert.showAndWait();
    }
    
    private void handleFilePreview(File file) {
        // ÌååÏùº ÎØ∏Î¶¨Î≥¥Í∏∞ Í∏∞Îä•
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("ÌååÏùº ÎØ∏Î¶¨Î≥¥Í∏∞");
        alert.setHeaderText(null);
        alert.setContentText("ÌååÏùº ÎØ∏Î¶¨Î≥¥Í∏∞ Í∏∞Îä•Ïù¥ Ïã§ÌñâÎê©ÎãàÎã§: " + file.getName());
        alert.showAndWait();
    }
    
    private void handleFileDelete(File file, HBox fileItem) {
        // ÌååÏùº ÏÇ≠Ï†ú ÌôïÏù∏
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle("ÌååÏùº ÏÇ≠Ï†ú");
        alert.setHeaderText(null);
        alert.setContentText("ÌååÏùºÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?");
        
        alert.showAndWait().ifPresent(response -> {
            if (response == ButtonType.OK) {
                attachedFiles.remove(file);
                fileListContainer.getChildren().remove(fileItem);
            }
        });
    }
    

    
    private void handleSubmitRequest() {
        // Ìèº Í≤ÄÏ¶ù
        if (!validateForm()) {
            return;
        }
        
        // Ìú¥Í∞Ä ÏöîÏ≤≠ Ï≤òÎ¶¨
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Ìú¥Í∞Ä ÏöîÏ≤≠");
        alert.setHeaderText(null);
        alert.setContentText("Ìú¥Í∞Ä ÏöîÏ≤≠Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï†úÏ∂úÎêòÏóàÏäµÎãàÎã§.");
        alert.showAndWait();
        
        // Ìèº Ï¥àÍ∏∞Ìôî
        clearForm();
    }
    
    private boolean validateForm() {
        // Ìú¥Í∞Ä Ï¢ÖÎ•ò Í≤ÄÏ¶ù
        if (leaveTypeComboBox.getValue() == null || leaveTypeComboBox.getValue().isEmpty()) {
            showError("Ìú¥Í∞Ä Ï¢ÖÎ•òÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
            return false;
        }
        
        // ÏãúÏûëÏùº Í≤ÄÏ¶ù
        if (startDatePicker.getValue() == null) {
            showError("ÏãúÏûëÏùºÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
            return false;
        }
        
        // Ï¢ÖÎ£åÏùº Í≤ÄÏ¶ù
        if (endDatePicker.getValue() == null) {
            showError("Ï¢ÖÎ£åÏùºÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
            return false;
        }
        
        // ÏÇ¨Ïú† Í≤ÄÏ¶ù
        if (reasonTextArea.getText() == null || reasonTextArea.getText().trim().isEmpty()) {
            showError("Ìú¥Í∞Ä ÏÇ¨Ïú†Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
            return false;
        }
        
        return true;
    }
    
    private void showError(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("ÏûÖÎ†• Ïò§Î•ò");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
    
    private void handleCancel() {
        // Ï∑®ÏÜå ÌôïÏù∏
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle("ÏûëÏÑ± Ï∑®ÏÜå");
        alert.setHeaderText(null);
        alert.setContentText("ÏûëÏÑ± Ï§ëÏù∏ ÎÇ¥Ïö©Ïù¥ Î™®Îëê ÏÇ¨ÎùºÏßëÎãàÎã§. Ï†ïÎßê Ï∑®ÏÜåÌïòÏãúÍ≤†ÏäµÎãàÍπå?");
        
        alert.showAndWait().ifPresent(response -> {
            if (response == ButtonType.OK) {
                clearForm();
            }
        });
    }
    
    private void clearForm() {
        // Ìèº Ï¥àÍ∏∞Ìôî
        leaveTypeComboBox.setValue("Ïó∞Ï∞®");
        startDatePicker.setValue(LocalDate.of(2025, 8, 1));
        endDatePicker.setValue(LocalDate.of(2025, 8, 3));
        reasonTextArea.clear();
        
        // Ï≤®Î∂ÄÌååÏùº Ï¥àÍ∏∞Ìôî
        attachedFiles.clear();
        fileListContainer.getChildren().clear();
    }
    
    private Stage getStage() {
        return (Stage) requestButton.getScene().getWindow();
    }
} 